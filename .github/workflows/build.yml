name: Build
on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
env:
  CARGO_TERM_COLOR: always
jobs:
  build:
    strategy:
      matrix:
        # https://github.com/actions/virtual-environments#available-environments
        os:
          - macos-latest
          - ubuntu-latest
          - windows-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - name: Build
        run: cargo build --release --verbose
      - name: Run tests
        run: cargo test --verbose
      - name: Upload a Build Artifact (w/o windows)
        if: ${{ matrix.os != 'windows-latest' }}
        uses: actions/upload-artifact@v3.1.3
        with:
          name: ${{ format('oss-info-maven-{0}', runner.os) }}
          path: |
            target/release/oss-info-maven
          if-no-files-found: error
          retention-days: 90
      - name: Upload a Build Artifact (windows)
        if: ${{ matrix.os == 'windows-latest' }}
        uses: actions/upload-artifact@v3.1.3
        with:
          name: oss-info-maven-Windows
          path: target/release/oss-info-maven.exe
          if-no-files-found: error
          retention-days: 90
  rustfmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: rustup component add rustfmt
      - run: cargo -v fmt -- --check
  clippy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: rustup component add clippy
      - run: cargo clippy
